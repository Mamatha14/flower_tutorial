[2025-10-15 14:58:02,668][flwr][WARNING] - DEPRECATED FEATURE: flwr.simulation.start_simulation() is deprecated.
	Instead, use the `flwr run` CLI command to start a local simulation in your Flower app, as shown for example below:

		$ flwr new  # Create a new Flower app from a template

		$ flwr run  # Run the Flower app in Simulation Mode

	Using `start_simulation()` is deprecated.

            This is a deprecated feature. It will be removed
            entirely in future versions of Flower.
        
[2025-10-15 14:58:02,668][flwr][INFO] - Starting Flower simulation, config: num_rounds=2, no round_timeout
[2025-10-15 14:58:04,164][flwr][INFO] - Flower VCE: Ray initialized with resources: {'CPU': 20.0, 'object_store_memory': 8015704473.0, 'memory': 18703310439.0, 'node:__internal_head__': 1.0, 'node:10.100.14.161': 1.0}
[2025-10-15 14:58:04,164][flwr][INFO] - Optimize your simulation with Flower VCE: https://flower.ai/docs/framework/how-to-run-simulations.html
[2025-10-15 14:58:04,164][flwr][INFO] - No `client_resources` specified. Using minimal resources for clients.
[2025-10-15 14:58:04,164][flwr][INFO] - Flower VCE: Resources for each Virtual Client: {'num_cpus': 1, 'num_gpus': 0.0}
[2025-10-15 14:58:04,218][flwr][INFO] - Flower VCE: Creating VirtualClientEngineActorPool with 20 actors
[2025-10-15 14:58:04,218][flwr][INFO] - [INIT]
[2025-10-15 14:58:04,218][flwr][INFO] - Requesting initial parameters from one random client
[2025-10-15 14:58:05,715][flwr][INFO] - Received initial parameters from one random client
[2025-10-15 14:58:05,715][flwr][INFO] - Starting evaluation of initial global parameters
[2025-10-15 14:58:06,295][flwr][ERROR] - Given groups=1, weight of size [6, 1, 5, 5], expected input[128, 6, 12, 12] to have 1 channels, but got 6 channels instead
[2025-10-15 14:58:06,301][flwr][ERROR] - Traceback (most recent call last):
  File "/home/mamatha/anaconda3/lib/python3.13/site-packages/flwr/simulation/legacy_app.py", line 361, in start_simulation
    hist = run_fl(
        server=initialized_server,
        config=initialized_config,
    )
  File "/home/mamatha/anaconda3/lib/python3.13/site-packages/flwr/server/server.py", line 492, in run_fl
    hist, elapsed_time = server.fit(
                         ~~~~~~~~~~^
        num_rounds=config.num_rounds, timeout=config.round_timeout
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/home/mamatha/anaconda3/lib/python3.13/site-packages/flwr/server/server.py", line 95, in fit
    res = self.strategy.evaluate(0, parameters=self.parameters)
  File "/home/mamatha/anaconda3/lib/python3.13/site-packages/flwr/server/strategy/fedavg.py", line 167, in evaluate
    eval_res = self.evaluate_fn(server_round, parameters_ndarrays, {})
  File "/home/mamatha/ME/Research/Hands-On/flower_tutorial/server.py", line 29, in evaluate_fn
    loss, accuracy = test(model, testloader, device)
                     ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mamatha/ME/Research/Hands-On/flower_tutorial/model.py", line 53, in test
    outputs = net(images)
  File "/home/mamatha/anaconda3/lib/python3.13/site-packages/torch/nn/modules/module.py", line 1773, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mamatha/anaconda3/lib/python3.13/site-packages/torch/nn/modules/module.py", line 1784, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/mamatha/ME/Research/Hands-On/flower_tutorial/model.py", line 18, in forward
    x = self.pool(F.relu(self.conv2(x)))
                         ~~~~~~~~~~^^^
  File "/home/mamatha/anaconda3/lib/python3.13/site-packages/torch/nn/modules/module.py", line 1773, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mamatha/anaconda3/lib/python3.13/site-packages/torch/nn/modules/module.py", line 1784, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/mamatha/anaconda3/lib/python3.13/site-packages/torch/nn/modules/conv.py", line 548, in forward
    return self._conv_forward(input, self.weight, self.bias)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mamatha/anaconda3/lib/python3.13/site-packages/torch/nn/modules/conv.py", line 543, in _conv_forward
    return F.conv2d(
           ~~~~~~~~^
        input, weight, bias, self.stride, self.padding, self.dilation, self.groups
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
RuntimeError: Given groups=1, weight of size [6, 1, 5, 5], expected input[128, 6, 12, 12] to have 1 channels, but got 6 channels instead

[2025-10-15 14:58:06,301][flwr][ERROR] - Your simulation crashed :(. This could be because of several reasons. The most common are: 
	 > Sometimes, issues in the simulation code itself can cause crashes. It's always a good idea to double-check your code for any potential bugs or inconsistencies that might be contributing to the problem. For example: 
		 - You might be using a class attribute in your clients that hasn't been defined.
		 - There could be an incorrect method call to a 3rd party library (e.g., PyTorch).
		 - The return types of methods in your clients/strategies might be incorrect.
	 > Your system couldn't fit a single VirtualClient: try lowering `client_resources`.
	 > All the actors in your pool crashed. This could be because: 
		 - You clients hit an out-of-memory (OOM) error and actors couldn't recover from it. Try launching your simulation with more generous `client_resources` setting (i.e. it seems {'num_cpus': 1, 'num_gpus': 0.0} is not enough for your run). Use fewer concurrent actors. 
		 - You were running a multi-node simulation and all worker nodes disconnected. The head node might still be alive but cannot accommodate any actor with resources: {'num_cpus': 1, 'num_gpus': 0.0}.
Take a look at the Flower simulation examples for guidance <https://flower.ai/docs/framework/how-to-run-simulations.html>.
